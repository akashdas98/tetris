(()=>{"use strict";const t=function(t,o){void 0===o&&(o=30);var r=this;this.drawTile=function(t,o,e){r.ctx.fillStyle=e,r.ctx.strokeStyle="#000000",r.ctx.globalAlpha=1,r.ctx.fillRect(t*r.scale,o*r.scale,r.scale,r.scale),r.ctx.globalAlpha=.5,r.ctx.strokeRect(t*r.scale,o*r.scale,r.scale,r.scale)},this.drawPiece=function(t){var o=t.getPivot,e=t.getColor,n=t.getMatrix,i=o(),a=e();n().forEach((function(t){r.drawTile(t[0]+i[0],t[1]+i[1],a)}))},this.draw=function(){r.clear();for(var t=0;t<20;t++)for(var o=0;o<10;o++){var e=r.matrix[t][o];1===e.value&&r.drawTile(o,t,e.color)}},this.getMatrix=function(){return r.matrix},this.getCtx=function(){return r.ctx},this.clear=function(){return r.ctx.clearRect(0,0,r.canvas.width,r.canvas.height)},this.clearLine=function(){for(var t=[],o=19;o>=0;o--)r.matrix[o].every((function(t){return 1===t.value}))&&t.push(o);for(var e=t.length-1;e>=0;e--){for(o=t[e];o>0;o--)r.matrix[o]=r.matrix[o-1];r.matrix[0]=Array.from({length:10},(function(){return{value:0,color:null}}))}t.length>0&&r.draw()},this.maxHeightReached=function(){return r.matrix[0].some((function(t){return 1===t.value}))},this.addToStack=function(t){t.getMatrix().forEach((function(o){var e,n=t.getPivot(),i=null===(e=r.matrix[o[1]+n[1]])||void 0===e?void 0:e[o[0]+n[0]];i&&(i.value=1,i.color=t.getColor())}))},this.canvas=t,this.ctx=t.getContext("2d"),this.scale=o,this.canvas.height=20*this.scale,this.canvas.width=10*this.scale,this.matrix=Array.from({length:20},(function(){return Array.from({length:10},(function(){return{value:0,color:null}}))}))},o=function(){function t(t){var o=t.matrix,r=t.pivot,e=t.id,n=t.color,i=this;this.setPivot=function(t,o){i.pivot=[t,o]},this.getPivot=function(){return i.pivot},this.getMatrix=function(){return i.matrix},this.getColor=function(){return i.color},this.rotate=function(t,o){if("O"!==i.id){var r=i.getRotationMatrix(t),e=i.matrix.map((function(t){return e=t,[(o=r)[0][0]*e[0]+o[0][1]*e[1],o[1][0]*e[0]+o[1][1]*e[1]];var o,e}));i.changeOrientation(t);for(var n=!1,a=0,c=i.kickData[i.orientation];a<c.length;a++){var u=c[a],s=u[0],l=u[1];if(!i.checkKick(s,l,e,o)){i.doKick(s,l,e,t),n=!0;break}}n||i.changeOrientation(0===t?1:0)}},this.matrix=o,this.pivot=r,this.id=e,this.color=n,this.orientation=0,this.kickData=[[[0,0],[0,0],[0,0],[0,0],[0,0]],[[0,0],[1,0],[0,-1],[0,2],[1,2]],[[0,0],[0,0],[0,0],[0,0],[0,0]],[[0,0],[-1,0],[-1,-1],[0,2],[-1,2]]]}return t.prototype.getRotationMatrix=function(t){return 0===t?[[0,1],[-1,0]]:[[0,-1],[1,0]]},t.prototype.checkKick=function(t,o,r,e){for(var n,i,a=!1,c=0;c<r.length;c++){if(r[c][0]+this.pivot[0]+t<0||r[c][0]+this.pivot[0]+t>9||r[c][1]+this.pivot[1]+o<0||r[c][1]+this.pivot[1]+o>19){a=!0;break}if(1===(null===(i=null===(n=e[r[c][1]+this.pivot[1]+o])||void 0===n?void 0:n[r[c][0]+this.pivot[0]+t])||void 0===i?void 0:i.value)){a=!0;break}}return a},t.prototype.doKick=function(t,o,r,e){this.matrix=r,this.pivot[0]+=t,this.pivot[1]+=o,this.changeOrientation(e)},t.prototype.changeOrientation=function(t){this.orientation=1==t?((this.orientation+1)%4+4)%4:((this.orientation-1)%4+4)%4},t}();var r,e=(r=function(t,o){return r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,o){t.__proto__=o}||function(t,o){for(var r in o)Object.prototype.hasOwnProperty.call(o,r)&&(t[r]=o[r])},r(t,o)},function(t,o){if("function"!=typeof o&&null!==o)throw new TypeError("Class extends value "+String(o)+" is not a constructor or null");function e(){this.constructor=t}r(t,o),t.prototype=null===o?Object.create(o):(e.prototype=o.prototype,new e)});const n=function(t){function o(o,r){return t.call(this,{id:"T",color:"#ff00ff",pivot:[o,r],matrix:[[0,-1],[-1,0],[0,0],[1,0]]})||this}return e(o,t),o}(o);var i=function(){var t=function(o,r){return t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,o){t.__proto__=o}||function(t,o){for(var r in o)Object.prototype.hasOwnProperty.call(o,r)&&(t[r]=o[r])},t(o,r)};return function(o,r){if("function"!=typeof r&&null!==r)throw new TypeError("Class extends value "+String(r)+" is not a constructor or null");function e(){this.constructor=o}t(o,r),o.prototype=null===r?Object.create(r):(e.prototype=r.prototype,new e)}}();const a=function(t){function o(o,r){var e=this;return(e=t.call(this,{id:"I",color:"#00ffff",pivot:[o,r],matrix:[[-1.5,.5],[-.5,.5],[.5,.5],[1.5,.5]]})||this).kickData=[[[0,0],[-1,0],[2,0],[-1,0],[2,0]],[[-1,0],[0,0],[0,0],[0,1],[0,-2]],[[-1,1],[1,1],[-2,1],[1,0],[-2,0]],[[0,1],[0,1],[0,1],[0,-1],[0,2]]],e}return i(o,t),o}(o);var c=function(){var t=function(o,r){return t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,o){t.__proto__=o}||function(t,o){for(var r in o)Object.prototype.hasOwnProperty.call(o,r)&&(t[r]=o[r])},t(o,r)};return function(o,r){if("function"!=typeof r&&null!==r)throw new TypeError("Class extends value "+String(r)+" is not a constructor or null");function e(){this.constructor=o}t(o,r),o.prototype=null===r?Object.create(r):(e.prototype=r.prototype,new e)}}();const u=function(t){function o(o,r){var e=this;return(e=t.call(this,{id:"O",color:"#ffff00",pivot:[o,r],matrix:[[-1,0],[0,0],[-1,-1],[0,-1]]})||this).rotate=function(){},e}return c(o,t),o}(o);var s=function(){var t=function(o,r){return t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,o){t.__proto__=o}||function(t,o){for(var r in o)Object.prototype.hasOwnProperty.call(o,r)&&(t[r]=o[r])},t(o,r)};return function(o,r){if("function"!=typeof r&&null!==r)throw new TypeError("Class extends value "+String(r)+" is not a constructor or null");function e(){this.constructor=o}t(o,r),o.prototype=null===r?Object.create(r):(e.prototype=r.prototype,new e)}}();const l=function(t){function o(o,r){return t.call(this,{id:"S",color:"#00ff00",pivot:[o,r],matrix:[[-1,0],[0,0],[0,-1],[1,-1]]})||this}return s(o,t),o}(o);var f=function(){var t=function(o,r){return t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,o){t.__proto__=o}||function(t,o){for(var r in o)Object.prototype.hasOwnProperty.call(o,r)&&(t[r]=o[r])},t(o,r)};return function(o,r){if("function"!=typeof r&&null!==r)throw new TypeError("Class extends value "+String(r)+" is not a constructor or null");function e(){this.constructor=o}t(o,r),o.prototype=null===r?Object.create(r):(e.prototype=r.prototype,new e)}}();const p=function(t){function o(o,r){return t.call(this,{id:"J",color:"#0000ff",pivot:[o,r],matrix:[[-1,0],[0,0],[1,0],[-1,-1]]})||this}return f(o,t),o}(o);var h=function(){var t=function(o,r){return t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,o){t.__proto__=o}||function(t,o){for(var r in o)Object.prototype.hasOwnProperty.call(o,r)&&(t[r]=o[r])},t(o,r)};return function(o,r){if("function"!=typeof r&&null!==r)throw new TypeError("Class extends value "+String(r)+" is not a constructor or null");function e(){this.constructor=o}t(o,r),o.prototype=null===r?Object.create(r):(e.prototype=r.prototype,new e)}}();const v=function(t){function o(o,r){return t.call(this,{id:"Z",color:"#ff0000",pivot:[o,r],matrix:[[-1,-1],[0,0],[0,-1],[1,0]]})||this}return h(o,t),o}(o);var d=function(){var t=function(o,r){return t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,o){t.__proto__=o}||function(t,o){for(var r in o)Object.prototype.hasOwnProperty.call(o,r)&&(t[r]=o[r])},t(o,r)};return function(o,r){if("function"!=typeof r&&null!==r)throw new TypeError("Class extends value "+String(r)+" is not a constructor or null");function e(){this.constructor=o}t(o,r),o.prototype=null===r?Object.create(r):(e.prototype=r.prototype,new e)}}();const y=function(t){function o(o,r){return t.call(this,{id:"L",color:"#ff7f00",pivot:[o,r],matrix:[[-1,0],[0,0],[1,0],[1,-1]]})||this}return d(o,t),o}(o);(new(function(){function o(){var o=this;this.history=99,this.normalDrop=100,this.softDrop=50,this.handleKeyDown=function(t){var r=o.board.getMatrix();switch(t.key){case"ArrowLeft":o.tryMove(-1,0);break;case"ArrowRight":o.tryMove(1,0);break;case"ArrowDown":o.startSoftDrop();break;case"ArrowUp":case"c":o.currentPiece.rotate(1,r);break;case" ":o.currentPiece.rotate(0,r);break;default:return}o.redrawGameBoard()},this.handleKeyUp=function(t){"ArrowDown"===t.key&&o.stopSoftDrop()},this.tryMove=function(t,r){var e=o.currentPiece.getMatrix(),n=o.currentPiece.getPivot();e.every((function(e){var i=e[0]+n[0]+t,a=e[1]+n[1]+r;return o.isPositionValid(i,a)}))&&o.currentPiece.setPivot(n[0]+t,n[1]+r)},this.isPositionValid=function(t,r){var e,n,i=o.board.getMatrix();return t>=0&&t<=9&&r<=19&&1!==(null===(n=null===(e=i[r])||void 0===e?void 0:e[t])||void 0===n?void 0:n.value)},this.canDrop=function(){var t=o.board.getMatrix(),r=o.currentPiece.getMatrix(),e=o.currentPiece.getPivot();return r.every((function(o){var r,n,i=o[1]+e[1]+1;return i<=19&&1!==(null===(n=null===(r=t[i])||void 0===r?void 0:r[o[0]+e[0]])||void 0===n?void 0:n.value)}))},this.redrawGameBoard=function(){o.board.draw(),o.board.drawPiece(o.currentPiece)},this.startGame=function(){o.stopped=!1,console.log("STARTED"),o.spawn(),o.startDropLoop()},this.startDropLoop=function(){o.frameRequestHandle=requestAnimationFrame(o.dropLoop)},this.dropLoop=function(t){var r=t-o.lastUpdateTime;for(o.lastUpdateTime=t,o.accumulatedTime+=r;o.accumulatedTime>o.currentSpeed;)o.canDrop()?o.drop():o.timeout||o.queueStop(),o.accumulatedTime-=o.currentSpeed;o.redrawGameBoard(),o.stopped||o.startDropLoop()},this.spawn=function(){o.currentPiece=o.nextPiece,o.nextPiece=o.generateRandomPiece(),o.board.drawPiece(o.currentPiece)},this.drop=function(){var t=o.currentPiece.getPivot();o.currentPiece.setPivot(t[0],t[1]+1),o.redrawGameBoard()},this.queueStop=function(){o.timeout||(console.log("STOPPING"),o.timeout=setTimeout(o.stop,1e3))},this.stop=function(){console.log("STOPPED"),o.clearStopTimeout(),o.canDrop()?console.log("STOP CANCELLED"):(o.clearDropInterval(),o.stopped=!0,console.log("ADDING TO BOARD"),o.board.addToStack(o.currentPiece),console.log("CLEARING LINES"),o.board.clearLine(),o.board.maxHeightReached()?console.log("GAME OVER"):o.startGame())},this.clearDropInterval=function(){o.frameRequestHandle&&(cancelAnimationFrame(o.frameRequestHandle),o.frameRequestHandle=null)},this.clearStopTimeout=function(){o.timeout&&clearTimeout(o.timeout),o.timeout=void 0},this.randomizer=function(){for(var t=Math.floor(7*Math.random());t===o.history;)t=Math.floor(7*Math.random());return o.history=t,t},this.generateRandomPiece=function(){var t;switch(o.randomizer()){case 0:t=new n(5,0);break;case 1:t=new a(4.5,-.5);break;case 2:t=new p(5,0);break;case 3:t=new y(5,0);break;case 4:t=new l(5,0);break;case 5:t=new u(5,0);break;default:t=new v(5,0)}return t},this.lastUpdateTime=window.performance.now(),this.board=new t(document.querySelector("canvas")),this.nextPiece=this.generateRandomPiece(),this.currentPiece=this.generateRandomPiece(),this.currentSpeed=this.normalDrop,this.isSoftDropping=!1,this.accumulatedTime=0,this.frameRequestHandle=null,this.stopped=!0,window.addEventListener("keydown",this.handleKeyDown),window.addEventListener("keyup",this.handleKeyUp)}return o.prototype.startSoftDrop=function(){this.isSoftDropping||(this.currentSpeed=this.softDrop,this.isSoftDropping=!0)},o.prototype.stopSoftDrop=function(){this.currentSpeed=this.normalDrop,this.isSoftDropping=!1},o}())).startGame()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,