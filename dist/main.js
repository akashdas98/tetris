(()=>{"use strict";const t=function(t,r){void 0===r&&(r=30);var o=this;this.drawTile=function(t,r,e){o.ctx.fillStyle=e,o.ctx.strokeStyle="#000000",o.ctx.globalAlpha=1,o.ctx.fillRect(t*o.scale,r*o.scale,o.scale,o.scale),o.ctx.globalAlpha=.5,o.ctx.strokeRect(t*o.scale,r*o.scale,o.scale,o.scale)},this.drawPiece=function(t){var r=t.getPivot,e=t.getColor,n=t.getMatrix,i=r(),a=e();n().forEach((function(t){o.drawTile(t[0]+i[0],t[1]+i[1],a)}))},this.draw=function(){o.clear();for(var t=0;t<20;t++)for(var r=0;r<10;r++){var e=o.matrix[t][r];1===e.value&&o.drawTile(r,t,e.color)}},this.getMatrix=function(){return o.matrix},this.getCtx=function(){return o.ctx},this.clear=function(){return o.ctx.clearRect(0,0,o.canvas.width,o.canvas.height)},this.clearLine=function(){for(var t=0;t<20;t++)if(o.matrix[t].every((function(t){return 1===t.value}))){for(var r=0;r<10;r++)o.matrix[t][r]={value:0,color:null};for(var e=t;e>0;e--)o.matrix[e]=o.matrix[e-1];o.matrix[0]=Array.from({length:10},(function(){return{value:0,color:null}})),t--}o.draw()},this.maxHeightReached=function(){return o.matrix[0].some((function(t){return 1===t.value}))},this.addToStack=function(t){t.getMatrix().forEach((function(r){var e,n=t.getPivot(),i=null===(e=o.matrix[r[1]+n[1]])||void 0===e?void 0:e[r[0]+n[0]];i&&(i.value=1,i.color=t.getColor())}))},this.canvas=t,this.ctx=t.getContext("2d"),this.scale=r,this.canvas.height=20*this.scale,this.canvas.width=10*this.scale,this.matrix=Array.from({length:20},(function(){return Array.from({length:10},(function(){return{value:0,color:null}}))}))},r=function(){function t(t){var r=t.matrix,o=t.pivot,e=t.id,n=t.color,i=this;this.setPivot=function(t,r){i.pivot=[t,r]},this.getPivot=function(){return i.pivot},this.getMatrix=function(){return i.matrix},this.getColor=function(){return i.color},this.rotate=function(t,r){if("O"!==i.id){var o=i.getRotationMatrix(t),e=i.matrix.map((function(t){return e=t,[(r=o)[0][0]*e[0]+r[0][1]*e[1],r[1][0]*e[0]+r[1][1]*e[1]];var r,e}));i.changeOrientation(t);for(var n=!1,a=0,c=i.kickData[i.orientation];a<c.length;a++){var u=c[a],s=u[0],f=u[1];if(!i.checkKick(s,f,e,r)){i.doKick(s,f,e,t),n=!0;break}}n||i.changeOrientation(0===t?1:0)}},this.matrix=r,this.pivot=o,this.id=e,this.color=n,this.orientation=0,this.kickData=[[[0,0],[0,0],[0,0],[0,0],[0,0]],[[0,0],[1,0],[0,-1],[0,2],[1,2]],[[0,0],[0,0],[0,0],[0,0],[0,0]],[[0,0],[-1,0],[-1,-1],[0,2],[-1,2]]]}return t.prototype.getRotationMatrix=function(t){return 0===t?[[0,1],[-1,0]]:[[0,-1],[1,0]]},t.prototype.checkKick=function(t,r,o,e){for(var n,i,a=!1,c=0;c<o.length;c++){if(o[c][0]+this.pivot[0]+t<0||o[c][0]+this.pivot[0]+t>9||o[c][1]+this.pivot[1]+r<0||o[c][1]+this.pivot[1]+r>19){a=!0;break}if(1===(null===(i=null===(n=e[o[c][1]+this.pivot[1]+r])||void 0===n?void 0:n[o[c][0]+this.pivot[0]+t])||void 0===i?void 0:i.value)){a=!0;break}}return a},t.prototype.doKick=function(t,r,o,e){this.matrix=o,this.pivot[0]+=t,this.pivot[1]+=r,this.changeOrientation(e)},t.prototype.changeOrientation=function(t){this.orientation=1==t?((this.orientation+1)%4+4)%4:((this.orientation-1)%4+4)%4},t}();var o,e=(o=function(t,r){return o=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,r){t.__proto__=r}||function(t,r){for(var o in r)Object.prototype.hasOwnProperty.call(r,o)&&(t[o]=r[o])},o(t,r)},function(t,r){if("function"!=typeof r&&null!==r)throw new TypeError("Class extends value "+String(r)+" is not a constructor or null");function e(){this.constructor=t}o(t,r),t.prototype=null===r?Object.create(r):(e.prototype=r.prototype,new e)});const n=function(t){function r(r,o){return t.call(this,{id:"T",color:"#ff00ff",pivot:[r,o],matrix:[[0,-1],[-1,0],[0,0],[1,0]]})||this}return e(r,t),r}(r);var i=function(){var t=function(r,o){return t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,r){t.__proto__=r}||function(t,r){for(var o in r)Object.prototype.hasOwnProperty.call(r,o)&&(t[o]=r[o])},t(r,o)};return function(r,o){if("function"!=typeof o&&null!==o)throw new TypeError("Class extends value "+String(o)+" is not a constructor or null");function e(){this.constructor=r}t(r,o),r.prototype=null===o?Object.create(o):(e.prototype=o.prototype,new e)}}();const a=function(t){function r(r,o){var e=this;return(e=t.call(this,{id:"I",color:"#00ffff",pivot:[r,o],matrix:[[-1.5,.5],[-.5,.5],[.5,.5],[1.5,.5]]})||this).kickData=[[[0,0],[-1,0],[2,0],[-1,0],[2,0]],[[-1,0],[0,0],[0,0],[0,1],[0,-2]],[[-1,1],[1,1],[-2,1],[1,0],[-2,0]],[[0,1],[0,1],[0,1],[0,-1],[0,2]]],e}return i(r,t),r}(r);var c=function(){var t=function(r,o){return t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,r){t.__proto__=r}||function(t,r){for(var o in r)Object.prototype.hasOwnProperty.call(r,o)&&(t[o]=r[o])},t(r,o)};return function(r,o){if("function"!=typeof o&&null!==o)throw new TypeError("Class extends value "+String(o)+" is not a constructor or null");function e(){this.constructor=r}t(r,o),r.prototype=null===o?Object.create(o):(e.prototype=o.prototype,new e)}}();const u=function(t){function r(r,o){var e=this;return(e=t.call(this,{id:"O",color:"#ffff00",pivot:[r,o],matrix:[[-1,0],[0,0],[-1,-1],[0,-1]]})||this).rotate=function(){},e}return c(r,t),r}(r);var s=function(){var t=function(r,o){return t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,r){t.__proto__=r}||function(t,r){for(var o in r)Object.prototype.hasOwnProperty.call(r,o)&&(t[o]=r[o])},t(r,o)};return function(r,o){if("function"!=typeof o&&null!==o)throw new TypeError("Class extends value "+String(o)+" is not a constructor or null");function e(){this.constructor=r}t(r,o),r.prototype=null===o?Object.create(o):(e.prototype=o.prototype,new e)}}();const f=function(t){function r(r,o){return t.call(this,{id:"S",color:"#00ff00",pivot:[r,o],matrix:[[-1,0],[0,0],[0,-1],[1,-1]]})||this}return s(r,t),r}(r);var l=function(){var t=function(r,o){return t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,r){t.__proto__=r}||function(t,r){for(var o in r)Object.prototype.hasOwnProperty.call(r,o)&&(t[o]=r[o])},t(r,o)};return function(r,o){if("function"!=typeof o&&null!==o)throw new TypeError("Class extends value "+String(o)+" is not a constructor or null");function e(){this.constructor=r}t(r,o),r.prototype=null===o?Object.create(o):(e.prototype=o.prototype,new e)}}();const p=function(t){function r(r,o){return t.call(this,{id:"J",color:"#0000ff",pivot:[r,o],matrix:[[-1,0],[0,0],[1,0],[-1,-1]]})||this}return l(r,t),r}(r);var h=function(){var t=function(r,o){return t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,r){t.__proto__=r}||function(t,r){for(var o in r)Object.prototype.hasOwnProperty.call(r,o)&&(t[o]=r[o])},t(r,o)};return function(r,o){if("function"!=typeof o&&null!==o)throw new TypeError("Class extends value "+String(o)+" is not a constructor or null");function e(){this.constructor=r}t(r,o),r.prototype=null===o?Object.create(o):(e.prototype=o.prototype,new e)}}();const v=function(t){function r(r,o){return t.call(this,{id:"Z",color:"#ff0000",pivot:[r,o],matrix:[[-1,-1],[0,0],[0,-1],[1,0]]})||this}return h(r,t),r}(r);var d=function(){var t=function(r,o){return t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,r){t.__proto__=r}||function(t,r){for(var o in r)Object.prototype.hasOwnProperty.call(r,o)&&(t[o]=r[o])},t(r,o)};return function(r,o){if("function"!=typeof o&&null!==o)throw new TypeError("Class extends value "+String(o)+" is not a constructor or null");function e(){this.constructor=r}t(r,o),r.prototype=null===o?Object.create(o):(e.prototype=o.prototype,new e)}}();const y=function(t){function r(r,o){return t.call(this,{id:"L",color:"#ff7f00",pivot:[r,o],matrix:[[-1,0],[0,0],[1,0],[1,-1]]})||this}return d(r,t),r}(r);(new(function(){function r(){var r=this;this.history=99,this.normalDrop=100,this.softDrop=50,this.handleKeyDown=function(t){var o=r.board.getMatrix();switch(t.key){case"ArrowLeft":r.tryMove(-1,0);break;case"ArrowRight":r.tryMove(1,0);break;case"ArrowDown":r.startSoftDrop();break;case"ArrowUp":case"c":r.currentPiece.rotate(1,o);break;case" ":r.currentPiece.rotate(0,o);break;default:return}r.redrawGameBoard()},this.handleKeyUp=function(t){"ArrowDown"===t.key&&r.stopSoftDrop()},this.tryMove=function(t,o){var e=r.currentPiece.getMatrix(),n=r.currentPiece.getPivot();e.every((function(e){var i=e[0]+n[0]+t,a=e[1]+n[1]+o;return r.isPositionValid(i,a)}))&&r.currentPiece.setPivot(n[0]+t,n[1]+o)},this.isPositionValid=function(t,o){var e,n,i=r.board.getMatrix();return t>=0&&t<=9&&o<=19&&1!==(null===(n=null===(e=i[o])||void 0===e?void 0:e[t])||void 0===n?void 0:n.value)},this.canDrop=function(){var t=r.board.getMatrix(),o=r.currentPiece.getMatrix(),e=r.currentPiece.getPivot();return o.every((function(r){var o,n,i=r[1]+e[1]+1;return i<=19&&1!==(null===(n=null===(o=t[i])||void 0===o?void 0:o[r[0]+e[0]])||void 0===n?void 0:n.value)}))},this.redrawGameBoard=function(){r.board.draw(),r.board.drawPiece(r.currentPiece)},this.startGame=function(){r.stopped=!1,r.spawn(),r.frameRequestHandle=requestAnimationFrame(r.startDropLoop)},this.startDropLoop=function(t){var o=t-r.lastUpdateTime;for(r.lastUpdateTime=t,r.accumulatedTime+=o;r.accumulatedTime>r.currentSpeed;)r.canDrop()?r.drop():r.timeout||r.queueStop(),r.accumulatedTime-=r.currentSpeed;r.redrawGameBoard(),r.stopped||(r.frameRequestHandle=requestAnimationFrame(r.startDropLoop))},this.spawn=function(){r.currentPiece=r.nextPiece,r.nextPiece=r.generateRandomPiece(),r.board.drawPiece(r.currentPiece)},this.drop=function(){var t=r.currentPiece.getPivot();r.currentPiece.setPivot(t[0],t[1]+1),r.redrawGameBoard()},this.queueStop=function(){r.timeout||(r.timeout=setTimeout(r.stop,1e3))},this.stop=function(){r.canDrop()||(r.clearDropInterval(),r.clearStopTimeout(),r.stopped=!0,r.board.addToStack(r.currentPiece),r.board.clearLine(),r.board.maxHeightReached()||r.startGame())},this.clearDropInterval=function(){r.frameRequestHandle&&(cancelAnimationFrame(r.frameRequestHandle),r.frameRequestHandle=null)},this.clearStopTimeout=function(){r.timeout&&clearTimeout(r.timeout),r.timeout=void 0},this.randomizer=function(){for(var t=Math.floor(7*Math.random());t===r.history;)t=Math.floor(7*Math.random());return r.history=t,t},this.generateRandomPiece=function(){var t;switch(r.randomizer()){case 0:t=new n(5,0);break;case 1:t=new a(4.5,-.5);break;case 2:t=new p(5,0);break;case 3:t=new y(5,0);break;case 4:t=new f(5,0);break;case 5:t=new u(5,0);break;default:t=new v(5,0)}return t},this.lastUpdateTime=window.performance.now(),this.board=new t(document.querySelector("canvas")),this.nextPiece=this.generateRandomPiece(),this.currentPiece=this.generateRandomPiece(),this.currentSpeed=this.normalDrop,this.isSoftDropping=!1,this.accumulatedTime=0,this.frameRequestHandle=null,this.stopped=!0,window.addEventListener("keydown",this.handleKeyDown),window.addEventListener("keyup",this.handleKeyUp)}return r.prototype.startSoftDrop=function(){this.isSoftDropping||(this.currentSpeed=this.softDrop,this.isSoftDropping=!0)},r.prototype.stopSoftDrop=function(){this.currentSpeed=this.normalDrop,this.isSoftDropping=!1},r}())).startGame()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,