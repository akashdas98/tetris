(()=>{"use strict";const t=function(t,e){void 0===e&&(e=30);var r=this;this.drawTile=function(t,e,o){r.ctx.fillStyle=o,r.ctx.strokeStyle="#000000",r.ctx.globalAlpha=1,r.ctx.fillRect(t*r.scale,e*r.scale,r.scale,r.scale),r.ctx.globalAlpha=.5,r.ctx.strokeRect(t*r.scale,e*r.scale,r.scale,r.scale)},this.drawPiece=function(t){var e=t.getPivot,o=t.getColor,n=t.getMatrix,i=e(),a=o();n().forEach((function(t){r.drawTile(t[0]+i[0],t[1]+i[1],a)}))},this.draw=function(){r.clear();for(var t=0;t<20;t++)for(var e=0;e<10;e++){var o=r.matrix[t][e];1===o.value&&r.drawTile(e,t,o.color)}},this.getMatrix=function(){return r.matrix},this.getCtx=function(){return r.ctx},this.clear=function(){return r.ctx.clearRect(0,0,r.canvas.width,r.canvas.height)},this.clearLine=function(){for(var t=[],e=19;e>=0;e--)r.matrix[e].every((function(t){return 1===t.value}))&&t.push(e);for(var o=t.length-1;o>=0;o--){for(e=t[o];e>0;e--)r.matrix[e]=r.matrix[e-1];r.matrix[0]=Array.from({length:10},(function(){return{value:0,color:null}}))}return t.length>0&&(r.draw(),r.totalLinesCleared+=t.length),t.length},this.maxHeightReached=function(){return r.matrix[0].some((function(t){return 1===t.value}))},this.addToStack=function(t){t.getMatrix().forEach((function(e){var o,n=t.getPivot(),i=null===(o=r.matrix[e[1]+n[1]])||void 0===o?void 0:o[e[0]+n[0]];i&&(i.value=1,i.color=t.getColor())}))},this.getTotalLinesCleared=function(){return r.totalLinesCleared},this.canvas=t,this.ctx=t.getContext("2d"),this.scale=e,this.canvas.height=20*this.scale,this.canvas.width=10*this.scale,this.totalLinesCleared=0,this.matrix=Array.from({length:20},(function(){return Array.from({length:10},(function(){return{value:0,color:null}}))}))},e=function(){function t(t){var e=t.matrix,r=t.pivot,o=t.id,n=t.color,i=this;this.setPivot=function(t,e){i.pivot=[t,e]},this.getPivot=function(){return i.pivot},this.getMatrix=function(){return i.matrix},this.getColor=function(){return i.color},this.rotate=function(t,e){if("O"!==i.id){var r=i.getRotationMatrix(t),o=i.matrix.map((function(t){return o=t,[(e=r)[0][0]*o[0]+e[0][1]*o[1],e[1][0]*o[0]+e[1][1]*o[1]];var e,o}));i.changeOrientation(t);for(var n=!1,a=0,c=i.kickData[i.orientation];a<c.length;a++){var u=c[a],s=u[0],l=u[1];if(!i.checkKick(s,l,o,e)){i.doKick(s,l,o,t),n=!0;break}}n||i.changeOrientation(0===t?1:0)}},this.matrix=e,this.pivot=r,this.id=o,this.color=n,this.orientation=0,this.kickData=[[[0,0],[0,0],[0,0],[0,0],[0,0]],[[0,0],[1,0],[0,-1],[0,2],[1,2]],[[0,0],[0,0],[0,0],[0,0],[0,0]],[[0,0],[-1,0],[-1,-1],[0,2],[-1,2]]]}return t.prototype.getRotationMatrix=function(t){return 0===t?[[0,1],[-1,0]]:[[0,-1],[1,0]]},t.prototype.checkKick=function(t,e,r,o){for(var n,i,a=!1,c=0;c<r.length;c++){if(r[c][0]+this.pivot[0]+t<0||r[c][0]+this.pivot[0]+t>9||r[c][1]+this.pivot[1]+e<0||r[c][1]+this.pivot[1]+e>19){a=!0;break}if(1===(null===(i=null===(n=o[r[c][1]+this.pivot[1]+e])||void 0===n?void 0:n[r[c][0]+this.pivot[0]+t])||void 0===i?void 0:i.value)){a=!0;break}}return a},t.prototype.doKick=function(t,e,r,o){this.matrix=r,this.pivot[0]+=t,this.pivot[1]+=e,this.changeOrientation(o)},t.prototype.changeOrientation=function(t){this.orientation=1==t?((this.orientation+1)%4+4)%4:((this.orientation-1)%4+4)%4},t}();var r,o=(r=function(t,e){return r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r])},r(t,e)},function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Class extends value "+String(e)+" is not a constructor or null");function o(){this.constructor=t}r(t,e),t.prototype=null===e?Object.create(e):(o.prototype=e.prototype,new o)});const n=function(t){function e(e,r){return t.call(this,{id:"T",color:"#ff00ff",pivot:[e,r],matrix:[[0,-1],[-1,0],[0,0],[1,0]]})||this}return o(e,t),e}(e);var i=function(){var t=function(e,r){return t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r])},t(e,r)};return function(e,r){if("function"!=typeof r&&null!==r)throw new TypeError("Class extends value "+String(r)+" is not a constructor or null");function o(){this.constructor=e}t(e,r),e.prototype=null===r?Object.create(r):(o.prototype=r.prototype,new o)}}();const a=function(t){function e(e,r){var o=this;return(o=t.call(this,{id:"I",color:"#00ffff",pivot:[e,r],matrix:[[-1.5,.5],[-.5,.5],[.5,.5],[1.5,.5]]})||this).kickData=[[[0,0],[-1,0],[2,0],[-1,0],[2,0]],[[-1,0],[0,0],[0,0],[0,1],[0,-2]],[[-1,1],[1,1],[-2,1],[1,0],[-2,0]],[[0,1],[0,1],[0,1],[0,-1],[0,2]]],o}return i(e,t),e}(e);var c=function(){var t=function(e,r){return t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r])},t(e,r)};return function(e,r){if("function"!=typeof r&&null!==r)throw new TypeError("Class extends value "+String(r)+" is not a constructor or null");function o(){this.constructor=e}t(e,r),e.prototype=null===r?Object.create(r):(o.prototype=r.prototype,new o)}}();const u=function(t){function e(e,r){var o=this;return(o=t.call(this,{id:"O",color:"#ffff00",pivot:[e,r],matrix:[[-1,0],[0,0],[-1,-1],[0,-1]]})||this).rotate=function(){},o}return c(e,t),e}(e);var s=function(){var t=function(e,r){return t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r])},t(e,r)};return function(e,r){if("function"!=typeof r&&null!==r)throw new TypeError("Class extends value "+String(r)+" is not a constructor or null");function o(){this.constructor=e}t(e,r),e.prototype=null===r?Object.create(r):(o.prototype=r.prototype,new o)}}();const l=function(t){function e(e,r){return t.call(this,{id:"S",color:"#00ff00",pivot:[e,r],matrix:[[-1,0],[0,0],[0,-1],[1,-1]]})||this}return s(e,t),e}(e);var p=function(){var t=function(e,r){return t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r])},t(e,r)};return function(e,r){if("function"!=typeof r&&null!==r)throw new TypeError("Class extends value "+String(r)+" is not a constructor or null");function o(){this.constructor=e}t(e,r),e.prototype=null===r?Object.create(r):(o.prototype=r.prototype,new o)}}();const f=function(t){function e(e,r){return t.call(this,{id:"J",color:"#0000ff",pivot:[e,r],matrix:[[-1,0],[0,0],[1,0],[-1,-1]]})||this}return p(e,t),e}(e);var h=function(){var t=function(e,r){return t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r])},t(e,r)};return function(e,r){if("function"!=typeof r&&null!==r)throw new TypeError("Class extends value "+String(r)+" is not a constructor or null");function o(){this.constructor=e}t(e,r),e.prototype=null===r?Object.create(r):(o.prototype=r.prototype,new o)}}();const d=function(t){function e(e,r){return t.call(this,{id:"Z",color:"#ff0000",pivot:[e,r],matrix:[[-1,-1],[0,0],[0,-1],[1,0]]})||this}return h(e,t),e}(e);var v=function(){var t=function(e,r){return t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r])},t(e,r)};return function(e,r){if("function"!=typeof r&&null!==r)throw new TypeError("Class extends value "+String(r)+" is not a constructor or null");function o(){this.constructor=e}t(e,r),e.prototype=null===r?Object.create(r):(o.prototype=r.prototype,new o)}}();const y=function(t){function e(e,r){return t.call(this,{id:"L",color:"#ff7f00",pivot:[e,r],matrix:[[-1,0],[0,0],[1,0],[1,-1]]})||this}return v(e,t),e}(e),g=function(t){var e=this;this.updateDisplay=function(){e.display.innerText=e.score.toString()},this.getScore=function(){return e.score},this.addScore=function(t,r){e.score+=e.baseScoreMap[t]*(r+1),e.updateDisplay()},this.display=t,this.score=0,this.updateDisplay(),this.baseScoreMap={0:0,1:40,2:100,3:200,4:1200}},m=function(t,e){var r=this;this.updateDisplay=function(){r.display.innerText=r.currentLevel.toString()},this.getCurrentLevel=function(){return r.currentLevel},this.updateLevel=function(t){t>=r.linesForNextLevelUp&&(r.currentLevel++,r.linesForNextLevelUp+=10,r.updateDisplay())},this.getCurrentSpeed=function(){return r.currentLevel>=29?r.levelSpeedList[29]:r.levelSpeedList[r.currentLevel]},this.display=e,this.startingLevel=t,this.currentLevel=t,this.updateDisplay(),this.linesForNextLevelUp=Math.min(10*this.startingLevel+10,Math.max(100,10*this.startingLevel-50)),this.levelSpeedList=[800,717,633,550,467,383,300,217,133,100,83,83,83,67,67,67,50,50,50,33,33,33,33,33,33,33,33,33,33,17]};new function(e){void 0===e&&(e=0);var r=this;this.history=99,this.handleKeyDown=function(t){var e=r.board.getMatrix();switch(t.key){case"ArrowLeft":r.tryMove(-1,0);break;case"ArrowRight":r.tryMove(1,0);break;case"ArrowDown":r.startSoftDrop();break;case"ArrowUp":case"c":r.currentPiece.rotate(1,e);break;case" ":r.currentPiece.rotate(0,e);break;default:return}r.redrawGameBoard()},this.handleKeyUp=function(t){"ArrowDown"===t.key&&r.stopSoftDrop()},this.tryMove=function(t,e){var o=r.currentPiece.getMatrix(),n=r.currentPiece.getPivot();o.every((function(o){var i=o[0]+n[0]+t,a=o[1]+n[1]+e;return r.isPositionValid(i,a)}))&&r.currentPiece.setPivot(n[0]+t,n[1]+e)},this.isPositionValid=function(t,e){var o,n,i=r.board.getMatrix();return t>=0&&t<=9&&e<=19&&1!==(null===(n=null===(o=i[e])||void 0===o?void 0:o[t])||void 0===n?void 0:n.value)},this.startSoftDrop=function(){r.isSoftDropping||(r.updateCurrentSpeed(Math.min(100,r.level.getCurrentSpeed()/2)),r.isSoftDropping=!0)},this.stopSoftDrop=function(){r.updateCurrentSpeed(r.level.getCurrentSpeed()),r.isSoftDropping=!1},this.canDrop=function(){var t=r.board.getMatrix(),e=r.currentPiece.getMatrix(),o=r.currentPiece.getPivot();return e.every((function(e){var r,n,i=e[1]+o[1]+1;return i<=19&&1!==(null===(n=null===(r=t[i])||void 0===r?void 0:r[e[0]+o[0]])||void 0===n?void 0:n.value)}))},this.redrawGameBoard=function(){r.board.draw(),r.board.drawPiece(r.currentPiece)},this.updateCurrentSpeed=function(t){r.currentSpeed=t},this.startGame=function(){r.stopped=!1,console.log("STARTED"),r.spawn(),r.startDropLoop()},this.startDropLoop=function(){r.frameRequestHandle=requestAnimationFrame(r.dropLoop)},this.dropLoop=function(t){var e=t-r.lastUpdateTime;for(r.lastUpdateTime=t,r.accumulatedTime+=e;r.accumulatedTime>r.currentSpeed;)r.canDrop()?r.drop():r.timeout||r.queueStop(),r.accumulatedTime-=r.currentSpeed;r.redrawGameBoard(),r.stopped||r.startDropLoop()},this.spawn=function(){r.currentPiece=r.nextPiece,r.nextPiece=r.generateRandomPiece(),r.board.drawPiece(r.currentPiece)},this.drop=function(){var t=r.currentPiece.getPivot();r.currentPiece.setPivot(t[0],t[1]+1),r.redrawGameBoard()},this.queueStop=function(){r.timeout||(console.log("STOPPING"),r.timeout=setTimeout(r.stop,1e3))},this.stop=function(){console.log("STOPPED"),r.clearStopTimeout(),r.canDrop()?console.log("STOP CANCELLED"):(r.clearDropInterval(),r.stopped=!0,r.handlePostOps(),r.board.maxHeightReached()?console.log("GAME OVER"):r.startGame())},this.handlePostOps=function(){console.log("ADDING TO BOARD"),r.board.addToStack(r.currentPiece),console.log("CLEARING LINES");var t=r.board.clearLine();r.scoring.addScore(t,r.level.getCurrentLevel()),r.level.updateLevel(r.board.getTotalLinesCleared()),r.updateCurrentSpeed(r.level.getCurrentSpeed())},this.clearDropInterval=function(){r.frameRequestHandle&&(cancelAnimationFrame(r.frameRequestHandle),r.frameRequestHandle=null)},this.clearStopTimeout=function(){r.timeout&&clearTimeout(r.timeout),r.timeout=void 0},this.randomizer=function(){for(var t=Math.floor(7*Math.random());t===r.history;)t=Math.floor(7*Math.random());return r.history=t,t},this.generateRandomPiece=function(){var t;switch(r.randomizer()){case 0:t=new n(5,0);break;case 1:t=new a(4.5,-.5);break;case 2:t=new f(5,0);break;case 3:t=new y(5,0);break;case 4:t=new l(5,0);break;case 5:t=new u(5,0);break;default:t=new d(5,0)}return t},this.lastUpdateTime=window.performance.now(),this.board=new t(document.querySelector("canvas")),this.scoring=new g(document.getElementById("score")),this.level=new m(e,document.getElementById("currentLevel")),this.currentSpeed=this.level.getCurrentSpeed(),this.nextPiece=this.generateRandomPiece(),this.currentPiece=this.generateRandomPiece(),this.isSoftDropping=!1,this.accumulatedTime=0,this.frameRequestHandle=null,this.stopped=!0,window.addEventListener("keydown",this.handleKeyDown),window.addEventListener("keyup",this.handleKeyUp)}(6).startGame()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,